{
    "id": "sedl-language",
    "extension": "sedl",
    "name": "SEDL",
    "defaultFileName":"ExperimentalDescription",
    "formats": [
        {
        "format": "sedl",
                "editorModeId": "ace/mode/SEDL4People",
                "_editorModeURI": "mode-SEDL4People.js",
                "editorThemeId": "ace/theme/SEDL4People",
                "_editorThemeURI": "theme-SEDL4People.js",
                "checkLanguage": "true"
        },
        {
        "format": "json",
                "editorModeId": "ace/mode/json",
                "_editorModeURI": "mode-json.js",
                "editorThemeId": "ace/theme/at",
                "_editorThemeURI": "theme-at.js",
                "checkLanguage": "false"
        }
        ],
    "operations": [
        {
        "id": "smallsampling",
                "name": "Small Sampling",
                "data": {},
                "_remoteExecution": "true",
                "action": "function(result) {}"
        },
        {
        "id": "multiplecomparison",
                "name": "Multiple Comparison",
                "data": {},
                "_remoteExecution": "true",
                "action": "function(result) {}"
        },
        {"id": "generateRawDataTemplate",
                "name": "Generate raw data template",
                "data": {},
                "_remoteExecution": "true",
                "action": "function(result) {}"
        },
        {"id": "generateSeedStudy",
                "name": "Generate seed of experiment description",
                "data": {},
                "_remoteExecution": "true",
                "action": "function(result) {}"
        },
        {
        "id": "outofrange",
                "name": "Out of Range",
                "data": {},
                "_remoteExecution": "false",
                "action": "function(operationStructure, fileUri) {
                var res;
                var view;
                CommandApi.doDocumentOperation(operationStructure.id, operationStructure.data, EditorManager.currentUri, function(result){
                res = result;
                        $.ajax('/ideas - sedl - language/language/operationView/'+operationStructure.id, {
                        'type' : 'get',
                                'data' : operationStructure.id,
                                'success' : function(result) {
                                view = result;
                                        console.log('[INFO]'+result.document);

                                },
                                'onError' : function(result) {
                                console.log('[ERROR] '+result);
                                },
                                'async' : false,
                        });

                        CommandApi.fetchFileContentsBeforeExecutingOperation(operationStructure, fileUri, 'csv',
                        'outofrangecsv', 'OUT OF RANGE CONFIGURATION', view,
                        'RUN other file', function(result){}, function(result){});

                }, false);
                console.log(res);
                loadOutOfRangeConfigurations(res.data);

        }"
        },
        {
        "id": "computestats",
        "name": "Compute Stats",
        "data": {},
        "_remoteExecution": "false",
        "action": "
//# sourceURL=sedl-ideas-Module-COMPUTE-STATS.js
function (operationStructure, fileUri) {
    var res;
    var view;
    var dataFile = null;
    var dataFileContent = null;
    CommandApi.doDocumentOperation(operationStructure.id, operationStructure.data, EditorManager.currentUri, function (result) {
        res = result;
        if (result && result.status == 'OK') {
            var data = JSON.parse(result.data);
            if (data.execution.length != null) {
                dataFile = data.execution[0];
                dataFileContent=$.ajax({url:'/files/get/'+WorkspaceManager.getSelectedWorkspace() + '/' + dataFile,
                        type:'get', data:{},async:false}).responseText;                                        
                if(dataFileContent){    
                    data = operation.data;
                    CommandApi.doDocumentOperation('computestatscalc', data, fileUri, function (result) {
                        console.log(result);
                    },
                            true,
                            dataFileContent);
                }
            }
        }
        if (!dataFile || !dataFileContent) {
            $.ajax('/ideas-sedl-language/language/operationView/' + operationStructure.id, {
                'type': 'get',
                'data': operationStructure.id,
                'success': function (result) {
                    view = result;
                    console.log('[INFO]' + result.document);
                    CommandApi.fetchFileContentsBeforeExecutingOperation(
                            operationStructure,
                            fileUri,
                            'csv',
                            'computestatscalc',
                            'COMPUTE STATS CONFIGURATION',
                            view,
                            'RUN other file',
                            function (result) {},
                            function (result) {
                                loadConfigurations(res.data);
                            },
                            false
                            );
                },
                'onError': function (result) {
                    console.log('[ERROR] ' + result);
                },
                'async': true,
            });
        }
    }, false);
}
            "
        }

        ],
        "inspectorLoader": "function(loader, format) {}",
        "helpURI":"/view/help/SEDL.html"

}